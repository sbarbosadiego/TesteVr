/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.testevr.view;

import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.extras.FlatAnimatedLafChange;
import com.testevr.controller.ClienteController;
import com.testevr.controller.EstoqueController;
import com.testevr.controller.ItemPedidoController;
import com.testevr.controller.PedidoController;
import com.testevr.controller.ProdutoController;
import com.testevr.model.ClienteModel;
import com.testevr.model.EstoqueModel;
import com.testevr.model.PedidoModel;
import com.testevr.model.ProdutoModel;
import com.testevr.util.FormatarData;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author Diego Barbosa
 */
public class MainView extends javax.swing.JFrame {

    // Data Atual e Localidade
    Locale localeBR = new Locale("pt", "BR");
    NumberFormat valorReal = NumberFormat.getCurrencyInstance(localeBR);

    // Cliente
    ClienteModel clienteModel = new ClienteModel();
    ClienteController clienteController = new ClienteController();
    ArrayList<ClienteModel> listaClienteModel = new ArrayList<>();

    // Produto
    ProdutoModel produtoModel = new ProdutoModel();
    ProdutoController produtoController = new ProdutoController();
    ArrayList<ProdutoModel> listaProdutoModel = new ArrayList<>();

    // Estoque
    EstoqueModel estoqueModel = new EstoqueModel();
    EstoqueController estoqueController = new EstoqueController();
    ArrayList<EstoqueModel> listaEstoqueModel = new ArrayList<>();

    // Pedido
    PedidoModel pedidoModel = new PedidoModel();
    PedidoController pedidoController = new PedidoController();
    ArrayList<PedidoModel> listaPedidos = new ArrayList<>();

    // Item Pedido
    ItemPedidoController itemPedidoController = new ItemPedidoController();

    // Funcional
    String editarSalvar;
    int Enter = 0;

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        listarClientes();
        listarProdutos();
        listarEstoque();
        listarPedidos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        telaCliente = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbCliente = new javax.swing.JTable();
        btnEditarCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtfPesquisarCliente = new javax.swing.JTextField();
        btnAtualizarTabelaCliente = new javax.swing.JButton();
        btnPesquisarCliente = new javax.swing.JButton();
        btnNovoCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        telaProduto = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbProduto = new javax.swing.JTable();
        btnEditarProduto = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtfPesquisarProduto = new javax.swing.JTextField();
        btnAtualizarTabelaProduto = new javax.swing.JButton();
        btnPesquisarProduto = new javax.swing.JButton();
        btnNovoProduto = new javax.swing.JButton();
        btnExcluirProduto = new javax.swing.JButton();
        telaEstoque = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtbEstoque = new javax.swing.JTable();
        btnEditarEstoque = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtfPesquisarEstoque = new javax.swing.JTextField();
        btnAtualizarTabelaEstoque = new javax.swing.JButton();
        btnPesquisarEstoque = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtfValorTotalEstoque = new javax.swing.JTextField();
        telaPedido = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtbPedidos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jtfPesquisarPedido = new javax.swing.JTextField();
        btnAtualizarTabelaPedidos = new javax.swing.JButton();
        btnPesquisarPedido = new javax.swing.JButton();
        btnNovoPedido = new javax.swing.JButton();
        btnExcluirPedido = new javax.swing.JButton();
        jcbFiltroPedido = new javax.swing.JComboBox<>();
        btnVisualizar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuModoEscuro = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuGitHub = new javax.swing.JMenuItem();
        menuLinkedIn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teste VR");
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jtbCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³d. Cliente", "Cliente", "Dia de Fechamento", "Limite de Compra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtbCliente);
        if (jtbCliente.getColumnModel().getColumnCount() > 0) {
            jtbCliente.getColumnModel().getColumn(0).setPreferredWidth(50);
            jtbCliente.getColumnModel().getColumn(1).setPreferredWidth(300);
            jtbCliente.getColumnModel().getColumn(2).setPreferredWidth(40);
            jtbCliente.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        btnEditarCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnEditarCliente.setText("Editar");
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Pesquisar:");

        jtfPesquisarCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisarClienteActionPerformed(evt);
            }
        });

        btnAtualizarTabelaCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAtualizarTabelaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/refresh.png"))); // NOI18N
        btnAtualizarTabelaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaClienteActionPerformed(evt);
            }
        });

        btnPesquisarCliente.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnPesquisarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        btnPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarClienteActionPerformed(evt);
            }
        });

        btnNovoCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnNovoCliente.setText("Novo");
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout telaClienteLayout = new javax.swing.GroupLayout(telaCliente);
        telaCliente.setLayout(telaClienteLayout);
        telaClienteLayout.setHorizontalGroup(
            telaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(telaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addGroup(telaClienteLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPesquisarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizarTabelaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(telaClienteLayout.createSequentialGroup()
                        .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        telaClienteLayout.setVerticalGroup(
            telaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaClienteLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(telaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizarTabelaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(telaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cliente", telaCliente);

        jtbProduto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtbProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³d. Produto", "DescriÃ§Ã£o", "PreÃ§o"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jtbProduto);
        if (jtbProduto.getColumnModel().getColumnCount() > 0) {
            jtbProduto.getColumnModel().getColumn(0).setPreferredWidth(30);
            jtbProduto.getColumnModel().getColumn(1).setPreferredWidth(400);
            jtbProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        btnEditarProduto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnEditarProduto.setText("Editar");
        btnEditarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProdutoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Pesquisar:");

        jtfPesquisarProduto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisarProdutoActionPerformed(evt);
            }
        });

        btnAtualizarTabelaProduto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAtualizarTabelaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/refresh.png"))); // NOI18N
        btnAtualizarTabelaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaProdutoActionPerformed(evt);
            }
        });

        btnPesquisarProduto.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnPesquisarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        btnPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProdutoActionPerformed(evt);
            }
        });

        btnNovoProduto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnNovoProduto.setText("Novo");
        btnNovoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProdutoActionPerformed(evt);
            }
        });

        btnExcluirProduto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnExcluirProduto.setText("Excluir");
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout telaProdutoLayout = new javax.swing.GroupLayout(telaProduto);
        telaProduto.setLayout(telaProdutoLayout);
        telaProdutoLayout.setHorizontalGroup(
            telaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(telaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addGroup(telaProdutoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPesquisarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizarTabelaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(telaProdutoLayout.createSequentialGroup()
                        .addComponent(btnNovoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        telaProdutoLayout.setVerticalGroup(
            telaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaProdutoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(telaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizarTabelaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(telaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Produto", telaProduto);

        jtbEstoque.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtbEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³d. Produto", "DescriÃ§Ã£o", "Quantidade", "Valor UnitÃ¡rio", "Valor Estoque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jtbEstoque);
        if (jtbEstoque.getColumnModel().getColumnCount() > 0) {
            jtbEstoque.getColumnModel().getColumn(1).setPreferredWidth(400);
            jtbEstoque.getColumnModel().getColumn(2).setPreferredWidth(90);
            jtbEstoque.getColumnModel().getColumn(3).setPreferredWidth(100);
            jtbEstoque.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        btnEditarEstoque.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnEditarEstoque.setText("Editar");
        btnEditarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEstoqueActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Pesquisar:");

        jtfPesquisarEstoque.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfPesquisarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisarEstoqueActionPerformed(evt);
            }
        });

        btnAtualizarTabelaEstoque.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAtualizarTabelaEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/refresh.png"))); // NOI18N
        btnAtualizarTabelaEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaEstoqueActionPerformed(evt);
            }
        });

        btnPesquisarEstoque.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnPesquisarEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        btnPesquisarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarEstoqueActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Valor Total Estoque:");

        jtfValorTotalEstoque.setEditable(false);
        jtfValorTotalEstoque.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout telaEstoqueLayout = new javax.swing.GroupLayout(telaEstoque);
        telaEstoque.setLayout(telaEstoqueLayout);
        telaEstoqueLayout.setHorizontalGroup(
            telaEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaEstoqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(telaEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addGroup(telaEstoqueLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPesquisarEstoque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizarTabelaEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(telaEstoqueLayout.createSequentialGroup()
                        .addComponent(btnEditarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(5, 5, 5)
                        .addComponent(jtfValorTotalEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        telaEstoqueLayout.setVerticalGroup(
            telaEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaEstoqueLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(telaEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfPesquisarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizarTabelaEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(telaEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEditarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(telaEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(telaEstoqueLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jtfValorTotalEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estoque", telaEstoque);

        jtbPedidos.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtbPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³d. Pedido", "CÃ³d Cliente", "Cliente", "Valor Total", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jtbPedidos);
        if (jtbPedidos.getColumnModel().getColumnCount() > 0) {
            jtbPedidos.getColumnModel().getColumn(0).setPreferredWidth(40);
            jtbPedidos.getColumnModel().getColumn(1).setPreferredWidth(40);
            jtbPedidos.getColumnModel().getColumn(2).setPreferredWidth(300);
            jtbPedidos.getColumnModel().getColumn(3).setPreferredWidth(100);
            jtbPedidos.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Pesquisar:");

        jtfPesquisarPedido.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfPesquisarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisarPedidoActionPerformed(evt);
            }
        });

        btnAtualizarTabelaPedidos.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAtualizarTabelaPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/refresh.png"))); // NOI18N
        btnAtualizarTabelaPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaPedidosActionPerformed(evt);
            }
        });

        btnPesquisarPedido.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnPesquisarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        btnPesquisarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarPedidoActionPerformed(evt);
            }
        });

        btnNovoPedido.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnNovoPedido.setText("Novo");
        btnNovoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoPedidoActionPerformed(evt);
            }
        });

        btnExcluirPedido.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnExcluirPedido.setText("Excluir");
        btnExcluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPedidoActionPerformed(evt);
            }
        });

        jcbFiltroPedido.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jcbFiltroPedido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente", "Data", "Produto" }));
        jcbFiltroPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltroPedidoActionPerformed(evt);
            }
        });

        btnVisualizar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout telaPedidoLayout = new javax.swing.GroupLayout(telaPedido);
        telaPedido.setLayout(telaPedidoLayout);
        telaPedidoLayout.setHorizontalGroup(
            telaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(telaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addGroup(telaPedidoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPesquisarPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbFiltroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizarTabelaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(telaPedidoLayout.createSequentialGroup()
                        .addComponent(btnNovoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        telaPedidoLayout.setVerticalGroup(
            telaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaPedidoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(telaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfPesquisarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizarTabelaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbFiltroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(telaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pedidos", telaPedido);

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenu1.setText("OpÃ§Ãµes");

        menuModoEscuro.setText("Modo Escuro");
        menuModoEscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuModoEscuroActionPerformed(evt);
            }
        });
        jMenu1.add(menuModoEscuro);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sobre");

        menuGitHub.setText("GitHub");
        menuGitHub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGitHubActionPerformed(evt);
            }
        });
        jMenu2.add(menuGitHub);

        menuLinkedIn.setText("LinkedIn");
        menuLinkedIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLinkedInActionPerformed(evt);
            }
        });
        jMenu2.add(menuLinkedIn);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        editarSalvar = "editar";
        editarCliente();
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void jtfPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisarClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisarClienteActionPerformed

    private void btnAtualizarTabelaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaClienteActionPerformed
        listarClientes();
        jtfPesquisarCliente.setText("");
    }//GEN-LAST:event_btnAtualizarTabelaClienteActionPerformed

    private void btnPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarClienteActionPerformed
        listarClientesPorNome(jtfPesquisarCliente.getText().toUpperCase());
    }//GEN-LAST:event_btnPesquisarClienteActionPerformed

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        salvarNovoCliente();
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        excluirCliente();
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnEditarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProdutoActionPerformed
        editarSalvar = "editar";
        editarProduto();
    }//GEN-LAST:event_btnEditarProdutoActionPerformed

    private void jtfPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisarProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisarProdutoActionPerformed

    private void btnAtualizarTabelaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaProdutoActionPerformed
        listarProdutos();
        jtfPesquisarProduto.setText("");
    }//GEN-LAST:event_btnAtualizarTabelaProdutoActionPerformed

    private void btnPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProdutoActionPerformed
        listarProdutosPorNome(jtfPesquisarProduto.getText().toUpperCase());
    }//GEN-LAST:event_btnPesquisarProdutoActionPerformed

    private void btnNovoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProdutoActionPerformed
        salvarNovoProduto();
    }//GEN-LAST:event_btnNovoProdutoActionPerformed

    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        excluirProduto();
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    private void jtfPesquisarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisarPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisarPedidoActionPerformed

    private void btnAtualizarTabelaPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaPedidosActionPerformed
        listarPedidos();
        jtfPesquisarPedido.setText("");
    }//GEN-LAST:event_btnAtualizarTabelaPedidosActionPerformed

    private void btnPesquisarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarPedidoActionPerformed
        if (jcbFiltroPedido.getEditor().getItem().toString().equals("Cliente")) {
            listarPedidoNomeCliente(jtfPesquisarPedido.getText().toUpperCase());
        } else if (jcbFiltroPedido.getEditor().getItem().toString().equals("Data")) {
            //listarPedidoData(jtfPesquisarPedido.getText());
        } else if (jcbFiltroPedido.getEditor().getItem().equals("Produto")) {
            //listarPedidoProdutosPedidos(jtfPesquisarPedido.getText());
        }
    }//GEN-LAST:event_btnPesquisarPedidoActionPerformed

    private void btnNovoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoPedidoActionPerformed
        salvarNovoPedido();
    }//GEN-LAST:event_btnNovoPedidoActionPerformed

    private void btnExcluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPedidoActionPerformed
        excluirPedido();
    }//GEN-LAST:event_btnExcluirPedidoActionPerformed

    private void jcbFiltroPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltroPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbFiltroPedidoActionPerformed

    private void menuModoEscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuModoEscuroActionPerformed
        if (menuModoEscuro.isSelected()) {
            EventQueue.invokeLater(() -> {
                FlatAnimatedLafChange.showSnapshot();
                FlatDarculaLaf.setup();
                FlatLaf.updateUI();
                FlatAnimatedLafChange.hideSnapshotWithAnimation();
            });
        } else {
            EventQueue.invokeLater(() -> {
                FlatAnimatedLafChange.showSnapshot();
                FlatIntelliJLaf.setup();
                FlatLaf.updateUI();
                FlatAnimatedLafChange.hideSnapshotWithAnimation();
            });
        }
    }//GEN-LAST:event_menuModoEscuroActionPerformed

    private void menuGitHubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGitHubActionPerformed
        try {
            URI link = new URI("https://github.com/sbarbosadiego/TesteVr");
            Desktop.getDesktop().browse(link);
        } catch (IOException | URISyntaxException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_menuGitHubActionPerformed

    private void menuLinkedInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLinkedInActionPerformed
        try {
            URI link = new URI("https://www.linkedin.com/in/diegobarbosad/");
            Desktop.getDesktop().browse(link);
        } catch (IOException | URISyntaxException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_menuLinkedInActionPerformed

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        visualizarPedido();
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void btnEditarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEstoqueActionPerformed
        editarEstoque();
    }//GEN-LAST:event_btnEditarEstoqueActionPerformed

    private void jtfPesquisarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisarEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisarEstoqueActionPerformed

    private void btnAtualizarTabelaEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaEstoqueActionPerformed
        listarEstoque();
        jtfPesquisarCliente.setText("");
    }//GEN-LAST:event_btnAtualizarTabelaEstoqueActionPerformed

    private void btnPesquisarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarEstoqueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        FlatIntelliJLaf.setup();

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    private void salvarNovoCliente() {
        editarSalvar = "salvar";
        ClienteView clienteView = new ClienteView(this);
        clienteView.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                setEnabled(true);
            }
        });
        clienteView.setVisible(true);
        this.setEnabled(false);
    }

    private void salvarNovoProduto() {
        editarSalvar = "salvar";
        ProdutoView produtoView = new ProdutoView(this);
        produtoView.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                setEnabled(true);
            }
        });
        produtoView.setVisible(true);
        this.setEnabled(false);
    }

    private void salvarNovoPedido() {
        editarSalvar = "salvar";
        PedidoView pedidoView = new PedidoView(this);
        pedidoView.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                setEnabled(true);
            }
        });
        pedidoView.setVisible(true);
        this.setEnabled(false);
    }

    private void editarCliente() {
        int linha = jtbCliente.getSelectedRow();
        try {
            Long codigoCliente = (Long) jtbCliente.getValueAt(linha, 0);
            clienteModel = clienteController.retornarClienteController(codigoCliente);
            ClienteView clienteView = new ClienteView(this);
            clienteView.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    setEnabled(true);
                }
            });
            clienteView.setClienteModel(clienteModel);
            this.setEnabled(false);
            clienteView.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum registro selecionado");
            e.printStackTrace();
        }
    }

    private void editarProduto() {
        int linha = jtbProduto.getSelectedRow();
        try {
            Long codigoProduto = (Long) jtbProduto.getValueAt(linha, 0);
            produtoModel = produtoController.retornarProdutoController(codigoProduto);
            ProdutoView produtoView = new ProdutoView(this);
            produtoView.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    setEnabled(true);
                }
            });
            produtoView.setProdutoModel(produtoModel);
            this.setEnabled(false);
            produtoView.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum registro selecionado");
            e.printStackTrace();
        }
    }

    private void editarEstoque() {
        int linha = jtbEstoque.getSelectedRow();
        try {
            Long codigoEstoqueProduto = (Long) jtbProduto.getValueAt(linha, 0);
            estoqueModel = estoqueController.retornarEstoqueController(codigoEstoqueProduto);
            Long codigoProduto = (Long) jtbProduto.getValueAt(linha, 0);
            produtoModel = produtoController.retornarProdutoController(codigoProduto);
            EstoqueView estoqueView = new EstoqueView(this);
            estoqueView.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    setEnabled(true);
                }
            });
            estoqueView.setEstoqueModel(estoqueModel, produtoModel);
            this.setEnabled(false);
            estoqueView.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum registro selecionado");
            e.printStackTrace();
        }
    }

    private void visualizarPedido() {
        int linha = jtbPedidos.getSelectedRow();
        try {
            Long codigoPedido = (Long) jtbPedidos.getValueAt(linha, 0);
            pedidoModel = pedidoController.retornarPedidoController(codigoPedido);
            PedidoInfoView pedidoInfoView = new PedidoInfoView(this);
            pedidoInfoView.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    setEnabled(true);
                }
            });
            pedidoInfoView.setPedidoModel(pedidoModel);
            this.setEnabled(false);
            pedidoInfoView.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum registro selecionado");
            e.printStackTrace();
        }
    }

    private void excluirCliente() {
        int linha = jtbCliente.getSelectedRow();
        Long codigoAluno = (Long) jtbCliente.getValueAt(linha, 0);
        if (JOptionPane.showConfirmDialog(this, "Excluir Cliente?", "Excluir",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (!pedidoController.clientePossuiPedidos(codigoAluno)) {
                clienteController.excluirClienteController(codigoAluno);
                JOptionPane.showMessageDialog(this, "Cliente excluÃ­do", "ATENÃÃO",
                        JOptionPane.WARNING_MESSAGE);
                listarClientes();
            } else {
                JOptionPane.showMessageDialog(this, "Erro de exclusÃ£o", "ERRO",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void excluirProduto() {
        int linha = jtbProduto.getSelectedRow();
        Long codigoProduto = (Long) jtbProduto.getValueAt(linha, 0);
        if (JOptionPane.showConfirmDialog(this, "Excluir Produto?", "Excluir",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (!itemPedidoController.produtoPossuiPedidos(codigoProduto)) {
                produtoController.excluirProdutoController(codigoProduto);
                JOptionPane.showMessageDialog(this, "Produto excluÃ­do", "ATENÃÃO",
                        JOptionPane.WARNING_MESSAGE);
                listarProdutos();
            } else {
                JOptionPane.showMessageDialog(this, "Erro de exclusÃ£o", "ERRO",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void excluirPedido() {
        int linha = jtbPedidos.getSelectedRow();
        Long codigoMatricula = (Long) jtbPedidos.getValueAt(linha, 0);
        if (JOptionPane.showConfirmDialog(this, "Excluir pedido?", "Excluir",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (pedidoController.excluirPedidoController(codigoMatricula)) {
                JOptionPane.showMessageDialog(this, "Pedido excluÃ­do", "ATENÃÃO",
                        JOptionPane.WARNING_MESSAGE);
                listarPedidos();
            } else {
                JOptionPane.showMessageDialog(this, "Erro de exclusÃ£o", "ERRO",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void listarClientes() {
        listaClienteModel = (ArrayList<ClienteModel>) clienteController.retornarListaClientesController();
        listaClienteModel.sort(Comparator.comparing(ClienteModel::getCodigoCliente));
        DefaultTableModel tabela = (DefaultTableModel) jtbCliente.getModel();
        tabela.setNumRows(0);

        int contador = listaClienteModel.size();
        for (int c = 0; c < contador; c++) {
            tabela.addRow(new Object[]{
                listaClienteModel.get(c).getCodigoCliente(),
                listaClienteModel.get(c).getNomeCliente(),
                listaClienteModel.get(c).getDiaFechamentoFatura(),
                valorReal.format(listaClienteModel.get(c).getLimiteCompra())
            });
        }
    }

    public void listarProdutos() {
        listaProdutoModel = (ArrayList<ProdutoModel>) produtoController.retornarListaProdutosController();
        listaProdutoModel.sort(Comparator.comparing(ProdutoModel::getCodigoProduto));
        DefaultTableModel tabela = (DefaultTableModel) jtbProduto.getModel();
        tabela.setNumRows(0);

        int contador = listaProdutoModel.size();
        for (int c = 0; c < contador; c++) {
            tabela.addRow(new Object[]{
                listaProdutoModel.get(c).getCodigoProduto(),
                listaProdutoModel.get(c).getDescricaoProduto(),
                valorReal.format(listaProdutoModel.get(c).getValorProduto())
            });
        }
    }

    public void listarEstoque() {
        listaEstoqueModel = (ArrayList<EstoqueModel>) estoqueController.retornarListaEstoquesController();
        listaEstoqueModel.sort(Comparator.comparing(EstoqueModel::getCodigoEstoque));
        DefaultTableModel tabela = (DefaultTableModel) jtbEstoque.getModel();
        tabela.setNumRows(0);

        int contador = listaEstoqueModel.size();
        for (int c = 0; c < contador; c++) {
            tabela.addRow(new Object[]{
                listaEstoqueModel.get(c).getProduto().getCodigoProduto(),
                listaEstoqueModel.get(c).getProduto().getDescricaoProduto(),
                listaEstoqueModel.get(c).getQuantidade(),
                valorReal.format(listaEstoqueModel.get(c).getProduto().getValorProduto()),
                valorReal.format(listaEstoqueModel.get(c).getProduto().getValorProduto() * listaEstoqueModel.get(c).getQuantidade())
            });
        }
        somaValorTotalEstoque();
    }

    public void listarPedidos() {
        listaPedidos = (ArrayList<PedidoModel>) pedidoController.retornarListaPedidosController();
        DefaultTableModel tabela = (DefaultTableModel) jtbPedidos.getModel();
        tabela.setNumRows(0);

        int contador = listaPedidos.size();
        for (int c = 0; c < contador; c++) {
            ClienteModel clienteModel = listaPedidos.get(c).getCliente();

            Long codigoCliente = clienteModel.getCodigoCliente();
            String nomeCliente = clienteModel.getNomeCliente();

            tabela.addRow(new Object[]{
                listaPedidos.get(c).getCodigoPedido(),
                codigoCliente,
                nomeCliente,
                valorReal.format(listaPedidos.get(c).getValorPedido()),
                FormatarData.formatarDataTabela(listaPedidos.get(c).getDataPedido().toString())
            });
        }
    }

    public void listarClientesPorNome(String nome) {
        listaClienteModel = (ArrayList<ClienteModel>) clienteController.retornarListaClienteNomeController(nome);
        listaClienteModel.sort(Comparator.comparing(ClienteModel::getCodigoCliente));
        DefaultTableModel tabela = (DefaultTableModel) jtbCliente.getModel();
        tabela.setNumRows(0);

        int contador = listaClienteModel.size();
        for (int c = 0; c < contador; c++) {
            tabela.addRow(new Object[]{
                listaClienteModel.get(c).getCodigoCliente(),
                listaClienteModel.get(c).getNomeCliente(),
                listaClienteModel.get(c).getDiaFechamentoFatura(),
                valorReal.format(listaClienteModel.get(c).getLimiteCompra())
            });
        }
    }

    public void listarProdutosPorNome(String nome) {
        listaProdutoModel = (ArrayList<ProdutoModel>) produtoController.retornarListaProdutoController(nome);
        listaProdutoModel.sort(Comparator.comparing(ProdutoModel::getCodigoProduto));
        DefaultTableModel tabela = (DefaultTableModel) jtbProduto.getModel();
        tabela.setNumRows(0);

        int contador = listaProdutoModel.size();
        for (int c = 0; c < contador; c++) {
            tabela.addRow(new Object[]{
                listaProdutoModel.get(c).getCodigoProduto(),
                listaProdutoModel.get(c).getDescricaoProduto(),
                valorReal.format(listaProdutoModel.get(c).getValorProduto())
            });
        }
    }

    public void listarPedidoNomeCliente(String nome) {
        listaPedidos = (ArrayList<PedidoModel>) pedidoController.retornarListaClienteController(nome);
        listaPedidos.sort(Comparator.comparing(PedidoModel::getCodigoPedido));
        DefaultTableModel tabela = (DefaultTableModel) jtbPedidos.getModel();
        tabela.setNumRows(0);

        int contador = listaPedidos.size();
        for (int c = 0; c < contador; c++) {
            ClienteModel clienteModel = listaPedidos.get(c).getCliente();

            Long codigoCliente = clienteModel.getCodigoCliente();
            String nomeCliente = clienteModel.getNomeCliente();

            tabela.addRow(new Object[]{
                listaPedidos.get(c).getCodigoPedido(),
                codigoCliente,
                nomeCliente,
                valorReal.format(listaPedidos.get(c).getValorPedido()),
                FormatarData.formatarDataTabela(listaPedidos.get(c).getDataPedido().toString())
            });
        }
    }

    private void somaValorTotalEstoque() {
        double somaTotal = 0, valor;
        int contador = jtbEstoque.getRowCount();
        NumberFormat valorReal = NumberFormat.getCurrencyInstance(localeBR);
        for (int i = 0; i < contador; i++) {
            String valorString = jtbEstoque.getValueAt(i, 4).toString();
            try {
                Number number = valorReal.parse(valorString);
                valor = number.doubleValue();
                somaTotal += valor;
            } catch (ParseException e) {
                System.out.println("Erro ao converter o valor: " + e.getMessage());
            }
        }
        jtfValorTotalEstoque.setText(valorReal.format(somaTotal));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarTabelaCliente;
    private javax.swing.JButton btnAtualizarTabelaEstoque;
    private javax.swing.JButton btnAtualizarTabelaPedidos;
    private javax.swing.JButton btnAtualizarTabelaProduto;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnEditarEstoque;
    private javax.swing.JButton btnEditarProduto;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnExcluirPedido;
    private javax.swing.JButton btnExcluirProduto;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JButton btnNovoPedido;
    private javax.swing.JButton btnNovoProduto;
    private javax.swing.JButton btnPesquisarCliente;
    private javax.swing.JButton btnPesquisarEstoque;
    private javax.swing.JButton btnPesquisarPedido;
    private javax.swing.JButton btnPesquisarProduto;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcbFiltroPedido;
    private javax.swing.JTable jtbCliente;
    private javax.swing.JTable jtbEstoque;
    private javax.swing.JTable jtbPedidos;
    private javax.swing.JTable jtbProduto;
    private javax.swing.JTextField jtfPesquisarCliente;
    private javax.swing.JTextField jtfPesquisarEstoque;
    private javax.swing.JTextField jtfPesquisarPedido;
    private javax.swing.JTextField jtfPesquisarProduto;
    private javax.swing.JTextField jtfValorTotalEstoque;
    private javax.swing.JMenuItem menuGitHub;
    private javax.swing.JMenuItem menuLinkedIn;
    private javax.swing.JCheckBoxMenuItem menuModoEscuro;
    private javax.swing.JPanel telaCliente;
    private javax.swing.JPanel telaEstoque;
    private javax.swing.JPanel telaPedido;
    private javax.swing.JPanel telaProduto;
    // End of variables declaration//GEN-END:variables
}
